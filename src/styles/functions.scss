////
/// Global functions
/// @group Globals
/// @author Kris Olszewski
////

/// Get brekpoint from a nested list of breakpoints
/// ---
/// @require {variable} $breakpoints - Breakpoints map
/// @param {String} $orientation - `horizontal` or `vertical`
/// @param {String} $breakpoint - Breakpoint
/// @return {Number} Breakpoint value
@function get-breakpoint($orientation, $breakpoint) {
  @return map-get(map-get($breakpoints, $orientation), $breakpoint);
}

//px to em
$browser-context: 16;
@function em($pixels, $context: $browser-context) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1em;
}
//padding-bottom: em(120px);

//px to vw
@function get-vw($target) {
  $vw-context: (1920 * .01) * 1px;
  @return ($target / $vw-context) * 1vw;
}
//font-size: get-vw(72px);

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin append-attr($x) {
  $sel: &;
  $collector: ();

  @for $i from 1 through length($sel) {
    $s: nth($sel, $i);
    $last: nth($s, -1);
    @if str-slice($last, -1) == "]" {
      // if is just the bare attribute with no value, $offset will be -1, otherwise it will be -2
      $offset: -1;
      $current-x: $x;

      @if str-slice($last, -2) == '"]' {
        // this attribute already has a value, so we need to adjust the offset
        $offset: -2;
      } @else {
        // no attribute value, so add the equals and quotes
        $current-x: '="' + $x + '"';
      }
      $last: str-slice($last, 1, $offset - 1) + $current-x + str-slice($last, $offset);
      $collector: append($collector, set-nth($s, -1, $last), comma);
    } @else {
      // following line will append $x to your non-attribute selector
      $collector: append($collector, selector-append($s, $x), comma);
      // the following line will not change your non-attribute selector at all
      //$collector: append($collector, $s, comma);
    }
  }

  @at-root #{$collector} {
    @content;
  }
}
